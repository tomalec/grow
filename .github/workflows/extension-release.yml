name: 'Woo Extension - Prepare New Release'
run-name:  Woo Extension - Prepare New Release `${{ github.event.inputs.type }}/${{ github.event.inputs.version }}` from `${{ github.ref_name || github.ref }}` by @${{ github.actor }}

# **What it does**: Does release preparation, creates bracnh, TODO lsit in PR, generate changelog.
# **Why we have it**: To support dev automating as much as possible, and leave nice reference for the consumers
# **Who does it impact**: Docs content.

on:
  workflow_dispatch:
    inputs:
      ## In the future we could infer that version from the changelog, or bump it via major|minor|patch.
      version:
        description: 'Version number to be released'
        required: true
      type:
        description: 'Type of the release (release|hotfix)'
        required: true
        default: 'release'
      wp_version:
        description: 'WordPress tested up to'
      wc_version:
        description: 'WooCommerce tested up to'


jobs:
  Prepare_release:
    name: Prepare release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare release PR
        id: prepare-release-pr
        uses: woocommerce/grow/prepare-extension-release@actions-v1.6.1-pre
        with:
          version: ${{ github.event.inputs.version }}
          type: ${{ github.event.inputs.type }}
          wp-version: ${{ github.event.inputs.wp_version }}
          wc-version: ${{ github.event.inputs.wc_version }}
          main-branch: 'trunk'
          pre-steps: |
            1. [ ] Review recent PRs & issues to check for critical or release blocker issues and get them wrapped up as needed.
            1. [ ] Check unit tests are passing (GitHub Actions)
            1. [ ] For major and minor release: Update the admin notice for this update at `AutomateWoo\UpdateNoticeManager` class
              - [ ] Update the `$version` variables
              - [ ] Add a short description about the update, main changes, etc. (`$description`)
              - [ ] Add the link to the release post (`$link`)
          post-steps: |
            ### Non-code checklist
            1. [ ] Update documentation
              - [ ] Publish any new required docs
              - [ ] Update triggers/rules/actions listing pages
            1. [ ] Mark related ideas complete on ideas board
            1. [ ] Publish a P2 post on [+automatap2](https://automatap2.wordpress.com)
              - [ ] Highlight important changes in the release (similar to what's included in the changelog)
              - [ ] Notify HEs waiting on bug fixes included in release so that they can follow up with customers

            <!--REMOVE THE NEXT SECTION WHEN DOING A PATCH RELEASE.-->
            ### Major and minor releases only
            1. [ ] Publish blog post
            1. [ ] Announce in `#woo-announcements` Slack
            1. [ ] If minimum requirements have changed, update:
              - https://woocommerce.com/products/automatewoo/ > "Information & Requirements"
            1. [ ] [Notify translators of the new release](https://github.com/woocommerce/automatewoo/wiki/Deploying-AutomateWoo-or-an-AutomateWoo-add-on#updating-translations)
      - name: Generate list using Markdown
        run: |
          echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "- Lets add a bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- Lets add a second bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- How ${{ toJSON( steps.prepare-release-pr.outputs ) }}" >> $GITHUB_STEP_SUMMARY

